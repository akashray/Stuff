apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "jupyterhub.fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  podManagementPolicy: {{ .Values.statefulset.podManagementPolicy }}
  replicas: {{ default 1 .Values.replicas }}
  revisionHistoryLimit: {{ .Values.statefulset.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ template "jupyterhub.fullname" . }}
  serviceName: ""
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ template "jupyterhub.fullname" . }}
        release: {{ .Release.Name | quote }}
    spec:
      containers:
      - command:
        - jupyterhub
        - -f
        - /etc/config/jupyterhub_config.py
        image: "{{ .Values.statefulset.image }}:{{ .Values.statefulset.imageTag }}"
        imagePullPolicy: "{{ .Values.statefulset.imagePullPolicy }}"
        name: {{ template "jupyterhub.fullname" . }}
        ports:
        - containerPort: 8000
          protocol: TCP
        - containerPort: 8081
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: config-volume
          mountPath: {{ .Values.statefulset.persistence.mountPath | quote }}
          dnsPolicy: ClusterFirst
      restartPolicy: {{ .Values.statefulset.restartPolicy }}
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: jupyter-hub
      serviceAccountName: jupyter-hub
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: jupyterhub-config
        name: config-volume
  updateStrategy:
    type: {{ .Values.statefulset.updateStrategy.type }}
